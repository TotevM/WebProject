@using FitnessApp.ViewModels.Workout
@using static FitnessApp.Common.ApplicationConstants;
@model IEnumerable<MyWorkoutsView>
@{
	ViewData["Title"] = "Add Workout";
}

<div class="d-flex justify-content-between align-items-center mb-3" style="margin-top: 20px;">
	<h2>@ViewData["Title"]</h2>
	@if (User?.Identity?.IsAuthenticated == true @* && User.IsInRole(TrainerRole) *@)
	{
		<a asp-area="Trainer" asp-controller="Workout" asp-action="Create" class="btn btn-primary"><i class="fas fa-plus"></i>Create a Workout</a>
	}
</div>
<hr />

<div class="row text-center">
	@foreach (var workout in Model)
	{
		<li class="list-group-item">
			<h2>@workout.Name</h2>

			@if (!workout.Exercises.Any())
			{
				<p>No exercises in this workout.</p>
			}
			else
			{
				<ul class="list-unstyled">
					@foreach (var exercise in workout.Exercises)
					{
						<li>
							<strong>Exercise Name:</strong> @exercise.Name
						</li>
					}
				</ul>
				<div class="mt-auto d-flex justify-content-between gap-2">
					<a asp-controller="Workout" asp-action="Details" asp-route-id="@workout.Id" class="btn btn-info flex-fill">Details</a>

					<form asp-controller="Workout" asp-action="AddToMyWorkouts" method="post" style="display:inline;">
						<input type="hidden" name="workoutId" value="@workout.Id" />
						<button type="submit" class="btn btn-success flex-fill">Add to "My Workouts"</button>
					</form>

				</div>
			}
		</li>
	}
</div>